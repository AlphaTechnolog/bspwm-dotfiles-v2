#!/bin/bash

# 1 = true && 0 = false
NVCODARK_SUPPORT=1
CHADWM_SUPPORT=1

get_theme () {
  local choices='catppuccin tokyonight gruvbox material_ocean onedark everforest everblush aquarium'
  local theme="$(rofi -sep "|" -dmenu -i -p '' <<< $(echo "$choices" | tr ' ' '|'))"
  if [[ $theme == "" ]]; then
    exit 1
  fi

  echo $theme
}

delete_actual_files () {
  rm $HOME/.config/kitty/kitty.conf
  rm $HOME/.config/dunst/dunstrc
  rm $HOME/.config/polybar/config
  rm $HOME/.config/rofi/config.rasi
}

update_pycritty () {
  local theme=$1
  if [[ $theme == 'material_ocean' ]]; then
    theme='material-ocean'
  fi
  pycritty -t $theme
}

setup_chadwm () {
  local theme=$1
  if ! test -d $HOME/.config/chadwm; then
    >&2 echo "Chadwm config not found!"
  else
    notify-send "Changing dwm theme to $theme..."
    cat $HOME/.config/chadwm/chadwm/config.def.h | sed "s/#include \"themes\/.*\.h\"/#include \"themes\/$theme\.h\"/g" > .newconfig.def.h
    rm $HOME/.config/chadwm/chadwm/config.def.h
    mv .newconfig.def.h $HOME/.config/chadwm/chadwm/config.def.h
    cat ~/.config/chadwm/scripts/bar.sh | sed "s/^\..\~\/\.config\/chadwm\/scripts\/bar_themes\/.*$/\. \~\/\.config\/chadwm\/scripts\/bar_themes\/$theme/g" > .barscript.sh
    rm $HOME/.config/chadwm/scripts/bar.sh
    mv .barscript.sh $HOME/.config/chadwm/scripts/bar.sh
    chmod +x $HOME/.config/chadwm/scripts/bar.sh
    cd $HOME/.config/chadwm/chadwm
    notify-send "Done, recompiling chadwm..."
    kitty -e $SHELL -c 'sudo make clean install' -d $HOME/.config/chadwm/chadwm
    notify-send 'Done, restart dwm to apply changes'
  fi
}

replace_dotfiles () {
  local theme=$1
  if [[ $theme == 'material_ocean' ]]; then
    theme='material-ocean'
  fi
  cp -r $HOME/.config/kitty/kitty-$theme.conf $HOME/.config/kitty/kitty.conf
  cp -r $HOME/.config/dunst/themes/$theme/dunstrc $HOME/.config/dunst/dunstrc
  cp -r $HOME/.config/polybar/themes/$theme $HOME/.config/polybar/config
  cp -r $HOME/.config/rofi/config-$theme.rasi $HOME/.config/rofi/config.rasi
}

reload_system () {
  bspc wm -r
  killall -q dunst
  dunst &
  kill -USR1 $(pidof kitty)
}

setup_theme () {
  local theme=$1
  delete_actual_files
  replace_dotfiles "$theme"
  echo $theme > $HOME/.actual-theme
  reload_system
}

setup_nvcodark () {
  local theme="$1"
  if [[ $theme == 'material_ocean' ]]; then
    theme='material'
  fi
  local basepath="$HOME/.config/nvim"
  local file="${basepath}/lua/rc.lua"
  if ! test -f $file; then
    >&2 echo "Warn: NvCoDark support is enabled but rc.lua file is not found in $basepath/lua"
    exit 1
  fi
  cat $file | \
    sed "s/config\.colorscheme = '.*'/config\.colorscheme = '$theme'/g" | \
    sed "7s/theme = '.*'/theme = '$theme'/g" > .tmp-rc.lua
  rm $HOME/.config/nvim/lua/rc.lua
  mv ./.tmp-rc.lua $HOME/.config/nvim/lua/rc.lua
}

main () {
  local theme=$(get_theme)
  echo "Configuring system to use $theme..."
  notify-send "Setting $theme as theme..."
  sleep 1
  if command -v pycritty 2>&1 > /dev/null; then
    update_pycritty $hteme
  fi
  setup_theme "$theme"
  # setup_theme_${theme}
  sleep 1
  notify-send "Done!"

  if [[ $NVCODARK_SUPPORT == 1 ]]; then
    setup_nvcodark "$theme"
  fi

  if [[ $CHADWM_SUPPORT == 1 ]]; then
    setup_chadwm "$theme"
  fi
}

main
